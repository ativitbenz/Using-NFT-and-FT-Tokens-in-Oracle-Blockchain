#
# Token asset to manage the complete lifecycle of a non-fungible token representing rentable devices. 
# This specification file will generate non-fungible token for rentable devices.
#
assets:
    - name: rentableDeviceNFT #Asset name
      type: token #Asset type
      symbol: rentdev         # Token symbol
      standard: erc721+   # Token standard
      
      anatomy:
          type: nonfungible # Token type
          unit: whole  #Token unit
      
      behavior:
        - indivisible                
        - singleton                   
        - mintable:                   
        - transferable                
        - burnable
        - roles:
            minter_role_name: minter
      
      properties:  # Custom asset attributes for non-fungible token 

          - name: contractStartTime  # Custom asset attribute to register the contract start time
            type: date

          - name: contractEndTime # Custom asset attribute to register the contract end time
            type: date

          - name: bookingStartTime # Custom asset attribute to set the booking start time
            type: date

          - name: actualEndTime # Custom asset attribute to set the actual end time 
            type: date

          - name: contractViolationFlag # Custom asset attribute maintains non-fungible token contract violation flag. 1 means contract was violated.
            type: boolean

          - name: lockingFlag # Custom asset attribute maintains non-fungible token locking flag. 1 means NFT is locked.
            type: boolean

          - name: bookingFlag # Custom asset attribute maintains non-fungible token booking flag. 1 means NFT is booked.
            type: boolean

          - name: bookingAmount # Custom asset attribute maintains non-fungible token booking flag. 1 means NFT is booked.
            type: number

          - name: bookingId # Custom asset attribute maintains non-fungible token booking flag. 1 means NFT is booked.
            type: number

          - name: deductionAmount # Custom asset attribute maintains non-fungible token booking flag. 1 means NFT is booked.
            type: number

          - name: rentalAmount # Custom asset attribute maintains non-fungible token booking flag. 1 means NFT is booked.
            type: number

          - name: returnedAmount # Custom asset attribute maintains non-fungible token booking flag. 1 means NFT is booked.
            type: number

          - name: vibration # Custom asset attribute maintains non-fungible token booking flag. 1 means NFT is booked.
            type: string

          - name: humidity # Custom asset attribute maintains non-fungible token booking flag. 1 means NFT is booked.
            type: string

          - name: speed # Custom asset attribute maintains non-fungible token booking flag. 1 means NFT is booked.
            type: string

          - name: longitude # Custom asset attribute maintains non-fungible token booking flag. 1 means NFT is booked.
            type: string

          - name: latitude # Custom asset attribute maintains non-fungible token booking flag. 1 means NFT is booked.
            type: string


      
      metadata: # To maintain the metadata on-chain, this tag will be used. 
          
          - name: deviceId
            type: string
          
          - name: description
            type: string
          
          - name: manufacturer
            type: string

          - name: manufacturingDate
            type: date

customMethods:
    - executeQuery
    - "receiveDevice(tokenId: string, fromOrgId: string, fromUserId: string, toOrgId: string, toUserId: string, contractStartTime: Date, contractEndTime: Date)" # Receiving of rented device NFT from the eshop company. 
    - "returnDevice(nftTokenId: string, ftTokenId: string, fromOrgId: string, fromUserId: string, toOrgId: string, toUserId: string, returnTime: Date, deductAmount: boolean, deductionOrChargeAmount: number)" # Returning of device NFT to the rental company. eCurrency is charged/deducted based in difference of deposit done and total cost of the rental. 
    - "lockDevice(tokenId: string)"  # Locking the device NFT
    - "unlockDevice(tokenId: string)" # Unlock the device NFT
    - "bookDevice(tokenId: string, bookingDate: Date, bookingAmount: number, bookingId: number, ftTokenId: string, fromOrgId: string, fromUserId: string, toOrgId: string, toUserId: string, depositAmount: number)" #booking the rented device, and eCurrency charged is done as deposit of the rental.
    - "setIoTParameters(tokenId: string, vibration?: string, humidity?: string, speed?: string, longitude?: string, latitude?: string)" #Setting IoT parameters
    - "resetCustomParameters(tokenId: string)" # Reset custom parameters
    - "getTokenHistoryByBookingId(tokenId: string, bookingId: number)" #get the token History for a specific device and rental contract
